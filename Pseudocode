"Sock Goblins"

Scenes - Instructions, Game

INSTRUCTIONS
  Elements
    - Title
    - Play button
    - Quit button
    - Instructions
    - Previous score

  init
    set background image
    set response to "Play"

    create lblTitle
    set text "Sock Goblins!"
    set position
    set size

    create Instructions MultiLabel
    Add text lines with instructions
      "The sock goblins are at it again!
        Collect your socks before they can steal them.
        Used WASD to move."
    set position
    set size

    create btnPlay
    set text to "Play"
    set position

    create btnQuit
    set text to "Quit"
    set position

    prevTime gets time
	Create LblTime
	Set text “Previous Time: {prevTime}”
	Set location

  process
    if btnPlay pressed
      set response to play
      start game
      end instructions
    if btnQuit is pressed
      set response to quit
      end instructions

GAME
  Elements
    - Character
    - Goblins
    - Timer
    - Tiles
    - Socks
    - Inventory
    - Score

  init
    set floor image

    create instance of Character -> character

    create instances of Socks -> sock

    create 2 instances of Goblin -> goblin
    
    create timer
    set start time to 30

    create lblTime

    create lblScore
    score is 0

  process
    if character collides with sock
      add 10 to score
      resets
      if image is already present in inventory
        add 5 to score
        display sockPair for 2 seconds
      else
        sock image appears in assigned space

    if character collides with goblin
      character pauses for 3 seconds (?)

    if goblin collides with sock
      sock resets

    if timer is at 0
      game ends

Character
  init
    assign image
    assign size
    assign postion
    assign moveSpeed to 5
    set walk cycle basics (row, speed, starting column)

  process
    set walking to false
    correction is (0, 0)

    if "w" is pressed
      add moveSpeed to y
      use back walk cycle
      correction (0, -5)
      walking is true
    if "a" is pressed
      subtract moveSpeed from x
      use left walk cycle
      correction (5, 0)
      walking is true
    if "s" is pressed
      subtract moveSpeed from y
      use front walk cycle
      correction (0, 5)
      walking is true
    if "d" is pressed
      add moveSpeed to x
      use right walk cycle
      correction (-5, 0)
      walking is true

    if walking
      use walk animation
    else
      use idle position

    if character collides with wall
      x gets correction(place 0)
      y get correction(place 1)
      walking is false

Goblin
  init
    set image
    set size
    set moveSpeed
    set position
    set walk cycle basics

  process
    correction is (0, 0)

    if y is decreasing
      use back walk cycle
      correction (0, moveSpeed)
    if y is increasing
      use front walk cycle
      correction (0, -moveSpeed)
    if x is increasing
      use right walk cycle
      correction (-moveSpeed, 0)
    if x is decreasing
      use left walk cycle
      correction (moveSpeed, 0)

    if goblin collides with wall
      x gets correction (place 0)
      y get correction (place 1)
      walk cycle changes row

Tiles
	init
		create a list of tile images
		make a list of state names
		set size
		set values to each state (floor gets 0, wall gets 1)
		set a default state (floor)

	setState
		state gets state
		copyImage from image list

	process
		if tile collides with character

Sock
  init
    set sock image list
    set size

  resest
    position randomly generated - cannot be in same space as wall
      #how do?

Pairs
  init
    set sockPair list
    set size 
    set position

Inventory
  init
    set image
    set size
    set position

lblTime
  init
    set text - Time: 30
    set position

lblScore
  init
    set text - Score: 0
    set position

main
  set keepGoing to True
  While keepGoing
    create instance of Instructions -> instructions
    start instructions
    when instructions ends,
    if response is "play"
      create instance of Game -> game
      start game
    else
      keepGoing is false
      exit program
